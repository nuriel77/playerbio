---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
spec:
  helmVersion: v2
  releaseName: prometheus-operator
  chart:
    git: https://github.com/helm/charts.git
    path: stable/prometheus-operator
    ref: c0e500d4afc8ad56e8495b926c47d8c4a384d82e
  values:
    defaultRules:
      create: true
      rules:
        etcd: false
        general: false
        kubeScheduler: false

    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        https: false

    prometheusOperator:
      admissionWebhooks:
        enabled: false
        patch:
          enabled: false
      tlsProxy:
        enabled: false

    prometheus:
      prometheusSpec:
        image:
          tag: v2.16.0
        replicas: 1
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
        ruleNamespaceSelector: {}
        serviceMonitorNamespaceSelector:
          matchNames:
          - playerbio
        ruleSelectorNilUsesHelmValues: false
        ruleSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        podMonitorNamespaceSelector: {}
        podMonitorSelector: {}
        retention: 1d
        enableAdminAPI: true
        storageSpec: {}
          #volumeClaimTemplate:
          #  spec:
          #    storageClassName: do-block-storage
          #    accessModes:
          #    - ReadWriteOnce
          #    resources:
          #      requests:
          #        storage: 10Gi

    alertmanager:
      alertmanagerSpec: {}
        #storage:
        #  volumeClaimTemplate:
        #    spec:
        #      storageClassName: do-block-storage
        #      resources:
        #        requests:
        #          storage: 1Gi
      ingress:
        enabled: false
      config:
        global:
          resolve_timeout: 3m
        route:
          group_by: ['alertname']
          group_wait: 10s
          group_interval: 3m
          repeat_interval: 12h
          receiver: 'null'
          # routes:
          # - match:
          #     severity: critical
          #     receiver: slack-notifications
        receivers:
        - name: 'null'
        # - name: 'slack-notifications'
        #   slack_configs:
        #   - send_resolved: true
        #     channel: '#monitoring'
        #     color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
        #     title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing
        #       | len }}{{ end }}] {{ .CommonLabels.alertname }}'
        #     title_link: '{{ template "slack.default.titlelink" . }}'
        #     pretext: '{{ template "slack.default.pretext" . }}'
        #     text: |-
        #       {{ range .Alerts }}
        #         *Alert:* {{ .Annotations.message }}
        #         *Details: ↓*
        #           {{ range .Labels.SortedPairs }} • *{{ .Name }}:* *`{{ .Value }}`*
        #           {{ end }}
        #       {{ end }}
        #     footer: '{{ template "slack.default.footer" . }}'
        #     fallback: '{{ template "slack.default.fallback" . }}'
        #     icon_emoji: '{{ template "slack.default.iconemoji" . }}'
        #     icon_url: '{{ template "slack.default.iconurl" . }}'

    grafana:
      image:
        tag: 6.6.2
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: false
      env:
        GF_EXPLORE_ENABLED: true
      ingress:
        enabled: false
        #annotations:
        #  kubernetes.io/ingress.class: "nginx-internal"
        hosts:
        - grafana.localhost
        tls:
        - hosts:
          - grafana.localhost
      admin:
        existingSecret: "grafana-auth"
        userKey: admin
        passwordKey: password
      grafana.ini:
        server:
          root_url: https://grafana.localhost
        analytics:
          check_for_updates: true
        log:
          mode: console
      defaultDashboardsEnabled: true
      dashboardsConfigMaps:
        playerbio: playerbio-dashboard
